import unittest
import time
from pyunitreport import HTMLTestRunner
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
import capsolver
from pathlib import Path
import os
import base64


class Navegandopagina1(unittest.TestCase):

    def setUp(self):
        self.driver = webdriver.Chrome()
        driver = self.driver

        driver.get("https://americanarchive.org/donate")
        driver._switch_to.frame(driver.find_element(By.XPATH,"//*[@id='main-container']/div[2]/div[2]/div/div/div/iframe"))
        driver.maximize_window
        driver.implicitly_wait(15)

        ActionChains(driver).key_down(Keys.TAB).key_up(Keys.TAB).perform()
        time.sleep(1)
        ActionChains(driver).key_down(Keys.ENTER).key_up(Keys.ENTER).perform()
        time.sleep(1)

        capsolver.api_key ="CAP-D52C2E1B421CD2653B2A2335F14C61DF"
        PAGE_URL ="https://americanarchive.org"
        PAGE_KEY ="6Lf04jsiAAAAAPMsKKbqPRBtoq0zoOZkbSmPZswc"
        ANCHOR =""
        RELOAD =""
        def solve_recaptcha_v2():
            solution =capsolver.solve({"type":"ReCaptchaV2TaskProxyLess","websiteURL": PAGE_URL,"websiteKey":PAGE_KEY,"anchor": ANCHOR, "RELOAD": RELOAD })
            return solution

        
       
        
    
    def test_pagina(self):
        driver = self.driver

        monto = driver.find_element(By.XPATH,"//*[@id='transaction_amount_other']")
        monto.send_keys(1)
        time.sleep(1)

        card_number = driver.find_element(By.XPATH,"//*[@id='hppform_account_number']")
        card_number.send_keys(1234567890)
        time.sleep(1)

        cvv = driver.find_element(By.XPATH,"//*[@id='hppform_field_cvv']/input")
        cvv.send_keys(109)
        time.sleep(1)

        account_holdername = driver.find_element(By.XPATH,"//*[@id='hppform_field_account_holder_name']/input")
        account_holdername.send_keys("jose cabrito")
        time.sleep(1)
        
        billing_city = driver.find_element(By.XPATH,"//*[@id='hppform_field_billing_city']/input")
        billing_city.send_keys("lima")
        time.sleep(1)
        
        billing_zip = driver.find_element(By.XPATH,"//*[@id='hppform_field_billing_zip']/input")
        billing_zip.send_keys("san miguel")
        time.sleep(1)
        
        email = driver.find_element(By.XPATH," //*[@id='hppform_field_notification_email_address']/input")
        email.send_keys("andres@gmail.com")
        time.sleep(1)

        agree_button = driver.find_element(By.XPATH,"//*[@id='hppform_field_terms_agree']/input")
        agree_button.click()
        time.sleep(1)

        select_month = Select(self.driver.find_element(By.XPATH,"//*[@id='exp_month']"))
        select_month.select_by_index(5)
        time.sleep(5)

        select_year = Select(self.driver.find_element(By.XPATH,"//*[@id='exp_year']"))
        select_year.select_by_value("24")

        time.sleep(60)

        
        
        
        

        
       

    
    def tearDown(self):
        self.driver.quit()
    
if __name__ == "__main__":
    unittest.main(verbosity=2, testRunner = HTMLTestRunner(output = "reportes", report_name = "hello-world-report"))